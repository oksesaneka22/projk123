version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: todo_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  backup:
    image: alpine
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache mysql-client aws-cli
        while true; do
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          mysqldump -h mysql -u root -ppassword todo_db > /backup/db_backup_$TIMESTAMP.sql
          aws s3 cp /backup/db_backup_$TIMESTAMP.sql s3://your-s3-bucket-name/mysql-backups/
          sleep 86400
        done
    depends_on:
      - mysql
    volumes:
      - ./backup:/backup
    networks:
      - app-network
    environment:
      AWS_ACCESS_KEY_ID: your-access-key
      AWS_SECRET_ACCESS_KEY: your-secret-key
      AWS_DEFAULT_REGION: your-region

volumes:
  mysql_data:
  backup:

networks:
  app-network:
